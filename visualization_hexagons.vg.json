{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 700,
  "height": 525,
  "padding": 5,
  "background": "black",
  "signals": [
    {
      "name": "current_step",
      "value": -1,
      "bind": {"input": "range", "min": 0, "max": 1500, "step": 1},
      "on": [
        {
          "events": "timer{100}",
          "update": "autoplay ? (current_step >= steps[1] ? -1 :current_step + 1 ): current_step"
        }
      ]
    },
    {"name": "autoplay", "value": false, "bind": {"input": "checkbox"}},
    {"name": "rows", "init": "y_extent[1]+1"},
    {"name": "columns", "init": "x_extent[1]+1"},
    {
      "name": "scale",
      "init": "round(100*max(1,width/height))/100",
      "bind": {"input": "range", "min": 0, "max": 2},
      "on": [
        {
          "events": "view:mousewheel",
          "update": "round(max(0, min(2, scale + (event.wheelDelta > 0 ? 0.1 : -0.1)))*100)/100"
        }
      ]
    },
    {"name": "hexalength", "update": "sin(PI)"},
    {"name": "sizeref", "init": "min(width,height)"},
    {"name": "sizeSymbol", "update": "bandwidth('hscale')"},
    {"name": "hcl_white", "init": "hcl('white')"},
    {
      "name": "visualization",
      "value": "umatrix",
      "bind": {"input": "select", "options": ["iso", "umatrix", "classes"]}
    },
    {"name": "showClasses", "update": "visualization === 'classes'"},
    {"name": "showIso", "update": "visualization === 'iso'"},
    {"name": "hivewidth", "update": "sizeSymbol*columns"},
    {
      "name": "umatrixScheme",
      "value": "greys",
      "bind": {"input": "select", "options": ["greys", "viridis"]}
    },
    {"name": "umatrixInverted", "value": false, "bind": {"input": "checkbox"}}
  ],
  "data": [
    {
      "name": "neurons",
      "format": {
        "type": "dsv",
        "delimiter": ";",
        "parse": {
          "x": "number",
          "y": "number",
          "z": "number",
          "step": "number",
          "score": "number",
          "secondary": "number",
          "class": "number",
          "score1": "number",
          "score2": "number"
        },
        "header": [
          "vector",
          "x",
          "y",
          "z",
          "step",
          "score",
          "class",
          "secondary",
          "score1",
          "score2",
          "entries"
        ]
      },
      "url": "https://raw.githubusercontent.com/mtiberghien/DNF1ED01-SOM/master/som2D.data?token=ASL2ZNNI6QTSMZUU35GMTNLALLQKG",
      "transform": [
        {"type": "extent", "signal": "steps", "field": "step"},
        {"type": "filter", "expr": "datum.step === current_step"},
        {"type": "extent", "field": "y", "signal": "y_extent"},
        {"type": "extent", "field": "x", "signal": "x_extent"},
        {"type": "extent", "field": "score", "signal": "scores"},
        {
          "type": "formula",
          "expr": "split(replace(replace(datum.vector, '[',''),']',''),',')",
          "as": "vector"
        },
        {"type": "formula", "expr": "datum.x+'.'+datum.y", "as": "id"}
      ]
    },
    {
      "name": "umatrix",
      "source": "neurons",
      "transform": [
        {"type": "project", "fields": ["x", "y", "vector"]},
        {
          "type": "formula",
          "expr": "sequence(datum.x-1,datum.x+2,1)",
          "as": "nx"
        },
        {
          "type": "formula",
          "expr": "sequence(datum.y-1,datum.y+2,1)",
          "as": "ny"
        },
        {"type": "flatten", "fields": ["ny"]},
        {"type": "flatten", "fields": ["nx"]},
        {
          "type": "filter",
          "expr": "datum.nx >= 0 && datum.ny >=0 && datum.nx < columns && datum.ny < rows && (((datum.y%2 === 1 && datum.nx < (datum.x+1)) || (datum.y%2 === 0 && datum.nx > (datum.x-1))) || datum.ny === datum.y) && (datum.nx !== datum.x || datum.ny !== datum.y)"
        },
        {"type": "formula", "expr": "datum.nx+'.'+datum.ny", "as": "nid"},
        {
          "type": "lookup",
          "key": "id",
          "from": "neurons",
          "fields": ["nid"],
          "values": ["vector"],
          "as": ["nvector"]
        },
        {"type": "flatten", "fields": ["vector", "nvector"]},
        {
          "type": "formula",
          "expr": "pow(datum.vector - datum.nvector, 2)",
          "as": "d"
        },
        {
          "type": "aggregate",
          "fields": ["d"],
          "ops": ["sum"],
          "groupby": ["x", "y", "nx", "ny"],
          "as": ["d"]
        },
        {"type": "formula", "expr": "sqrt(datum.d)", "as": "d"},
        {
          "type": "aggregate",
          "fields": ["d"],
          "ops": ["mean"],
          "groupby": ["x", "y"],
          "as": ["d"]
        },
        {"type": "formula", "expr": "datum.x+'.'+datum.y", "as": "id"},
        {
          "type": "lookup",
          "from": "neurons",
          "key": "id",
          "fields": ["id"],
          "values": ["class", "secondary", "score", "score1", "score2"]
        }
      ]
    },
    {
      "name": "contours",
      "values": [
        {
          "width": 10,
          "height": 10,
          "values": [
            0.1104524252313022,
            0.12325016917280553,
            0.10838464590715038,
            0.14035817333045356,
            0.143645467609847,
            0.15341880020532545,
            0.13646580176046996,
            0.19021733219584647,
            0.14254850478191713,
            0.10426525376614942,
            0.3420473979306696,
            0.29999443315596563,
            0.17703151434537007,
            0.13163166911012492,
            0.16840095849346812,
            0.1519264800755519,
            0.14363559645589932,
            0.14910228561558297,
            0.18672608539916158,
            0.14743590340749316,
            0.8192573300178757,
            0.6854187533422988,
            0.5752394393452276,
            0.49759144514959147,
            0.43746238530269266,
            0.394795914054455,
            0.3988192510924798,
            0.4261555238375933,
            0.425602367540867,
            0.4199257579340343,
            0.6194003400816361,
            0.706281063881834,
            0.8792432025252085,
            0.9532892229176932,
            0.9902653075523364,
            1.0306001043852613,
            1.02690216650738,
            0.969050480347233,
            0.9796484772168512,
            1.2135851639299915,
            0.4158038769338918,
            0.4963335095434882,
            0.6276330459055877,
            0.75842473203415,
            0.842318177308605,
            0.9077375325631956,
            1.0085667309896167,
            1.1155519713359234,
            1.0587865521066864,
            0.9676538973538364,
            0.23455570187660127,
            0.24467118372174734,
            0.27924308033125783,
            0.31379021601217055,
            0.3260777705504028,
            0.29550165342858437,
            0.3662588669140408,
            0.5118381274229393,
            0.5187204054560913,
            0.4580536458298099,
            0.20441753312238886,
            0.2374461619029147,
            0.30592309645181665,
            0.3335041184856508,
            0.30695752194430287,
            0.30109322155816776,
            0.3277430151972263,
            0.37085179284773406,
            0.3535615045384144,
            0.34179271952399026,
            0.1528354235305839,
            0.20785503523601556,
            0.34887331584155656,
            0.3519202734402077,
            0.3208609271774456,
            0.34750611040868307,
            0.34375926412665325,
            0.3743987797126233,
            0.4078045893589354,
            0.467436557756591,
            0.13932649978488423,
            0.30606945237223426,
            0.347374774465332,
            0.24845366433387728,
            0.3088772209557371,
            0.31361334392862605,
            0.28922198545776445,
            0.4047164892094572,
            0.3913220545302244,
            0.343263514909922,
            0.11261096047029513,
            0.24430128081269212,
            0.427097265745661,
            0.26991416047722444,
            0.2602053700803736,
            0.3903126146176797,
            0.3184984664362835,
            0.3398564497218879,
            0.4637475881015469,
            0.28879270570936855
          ]
        }
      ],
      "transform": [
        {"type": "formula", "expr": "columns", "as": "width"},
        {"type": "formula", "expr": "rows", "as": "height"},
        {
          "type": "formula",
          "expr": "pluck(data('umatrix'),'d')",
          "as": "values"
        },
        {
          "type": "isocontour",
          "scale": {"expr": "hivewidth/datum.width"},
          "translate": [
            {"signal": "(width - hivewidth)/2"},
            {"signal": "(height - (hivewidth*rows/columns))/2"}
          ]
        }
      ]
    }
  ],
  "legends": [
    {
      "title": "Classes",
      "orient": "right",
      "fill": "color",
      "labelColor": "#eee",
      "titleColor": "#eee",
      "encode": {
        "labels": {"update": {"opacity": {"signal": "showClasses ? 1 :0"}}},
        "symbols": {"update": {"opacity": {"signal": "showClasses ? 1 :0"}}},
        "title": {"update": {"opacity": {"signal": "showClasses ? 1 :0"}}}
      }
    }
  ],
  "scales": [
    {
      "name": "hscale",
      "type": "band",
      "domain": {"signal": "sequence(0,max(rows,columns)+1,1)"},
      "range": [0, {"signal": "sizeref*scale"}]
    },
    {
      "name": "g-color",
      "domain": {"data": "umatrix", "field": "d"},
      "range": {"scheme": {"signal": "umatrixScheme"}},
      "reverse": {"signal": "umatrixInverted"}
    },
    {
      "name": "color",
      "type": "ordinal",
      "domainMin": 0,
      "domain": {"data": "umatrix", "field": "class", "sort": true},
      "range": {"scheme": "category20"}
    },
    {
      "name": "iso-color",
      "type": "linear",
      "domain": {"data": "umatrix", "field": "d"},
      "range": {"scheme": "blueorange"}
    }
  ],
  "marks": [
    {
      "type": "text",
      "encode": {
        "enter": {
          "fontSize": {"value": 14},
          "fontWeight": {"value": "bold"},
          "xc": {"signal": "width/2"},
          "align": {"value": "center"},
          "fill": {"value": "#eee"}
        },
        "update": {"text": {"signal": "'SOM Topology step: ' + current_step"}}
      }
    },
    {
      "type": "path",
      "from": {"data": "contours"},
      "encode": {
        "enter": {
          "stroke": {"value": "#ccc"},
          "strokeWidth": {"value": 1},
          "fill": {"scale": "iso-color", "field": "contour.value"}
        },
        "update": {"opacity": {"signal": "showIso ? 1 :0"}}
      },
      "transform": [{"type": "geopath", "field": "datum.contour"}]
    },
    {
      "type": "symbol",
      "from": {"data": "umatrix"},
      "encode": {
        "enter": {
          "shape": {"value": "m0,-1 l1,.5 v1 l-1,.5 l-1,-.5 v-1 l1,-.5"},
          "stroke": {"value": "#777"}
        },
        "update": {
          "size": {"signal": "pow(sizeSymbol,2)"},
          "tooltip": [
            {
              "test": "!showIso && !showClasses",
              "signal": "{'class':datum.class,'score':datum.score,'score max':datum.score1, 'score 2':datum.score2,'coords':[datum.x,datum.y]}"
            }
          ],
          "opacity": {"signal": "showIso ? 0 : 1"},
          "xc": {
            "field": "x",
            "scale": "hscale",
            "offset": {
              "signal": "(datum.y%2==1 ? 0 : sizeSymbol/2) + (width - sizeSymbol*columns)/2 + sizeSymbol/4"
            }
          },
          "fill": [
            {
              "test": "showClasses && datum.class >-1",
              "signal": "datum.secondary > -1 ? datum.secondary : datum.class",
              "scale": "color"
            },
            {"test": "showClasses && datum.class == -1", "value": "#555"},
            {"field": "d", "scale": "g-color"}
          ],
          "yc": {
            "field": "y",
            "scale": "hscale",
            "offset": {
              "signal": "(datum.y > 0 ? -datum.y*sizeSymbol/4 : 0) +(height - (sizeSymbol*rows - (rows-1)*sizeSymbol/4))/2 + sizeSymbol/2"
            }
          }
        }
      }
    },
    {
      "type": "symbol",
      "from": {"data": "umatrix"},
      "encode": {
        "enter": {
          "shape": {"value": "m0,-1 l1,.5 v1 l-1,.5 l-1,-.5 v-1 l1,-.5"}
        },
        "update": {
          "opacity": {"signal": "showIso || !showClasses ? 0 :1"},
          "tooltip": [
            {
              "test": "showClasses",
              "signal": "{'class':datum.class,'score':datum.score,'score max':datum.score1, 'score 2':datum.score2,'coords':[datum.x,datum.y]}"
            }
          ],
          "size": {
            "signal": "pow(0.95*sizeSymbol * (datum.score1/(datum.score || 1)||1),2)"
          },
          "xc": {
            "field": "x",
            "scale": "hscale",
            "offset": {
              "signal": "(datum.y%2==1 ? 0 : sizeSymbol/2) + (width - sizeSymbol*columns)/2 + sizeSymbol/4"
            }
          },
          "fill": [
            {
              "test": "showClasses && datum.class > -1",
              "field": "class",
              "scale": "color"
            },
            {"test": "showClasses && datum.class == -1", "value": "#555"},
            {"value": null}
          ],
          "yc": {
            "field": "y",
            "scale": "hscale",
            "offset": {
              "signal": "(datum.y > 0 ? -datum.y*sizeSymbol/4 : 0) +(height - (sizeSymbol*rows - (rows-1)*sizeSymbol/4))/2 + sizeSymbol/2"
            }
          }
        }
      }
    }
  ]
}